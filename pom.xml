<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>eu.europeana</groupId>
        <artifactId>europeana-parent-pom</artifactId>
        <version>2.4</version>
    </parent>

    <artifactId>apikey</artifactId>
    <version>1.6</version>
    <packaging>war</packaging>

    <name>ApiKey Authentication Service</name>
    <description>Europeana-wide API key and Authentication service</description>

    <scm>
        <connection>scm:git:git@github.com:europeana/apikey.git</connection>
        <developerConnection>scm:git:git@github.com:europeana/apikey.git</developerConnection>
        <url>https://github.com/europeana/apikey</url>
        <tag>HEAD</tag>
    </scm>

    <properties>
        <dependency-check-maven.version>8.4.3</dependency-check-maven.version>
        <maven.compiler.target>17</maven.compiler.target>
        <maven.compiler.source>17</maven.compiler.source>
        <spring-boot.version>2.7.18</spring-boot.version>
        <api-commons-version>0.3.19</api-commons-version>
        <keycloak.version>20.0.5</keycloak.version>
        <commonsIO.version>2.16.1</commonsIO.version>
        <commonsLang3.version>3.14.0</commonsLang3.version>
        <jodatime.version>2.12.7</jodatime.version>
        <springdoc.version>1.8.0</springdoc.version>
        <postgresql.version>42.7.3</postgresql.version>
        <json.version>20240303</json.version>
        <commons-validator.version>1.8.0</commons-validator.version>
        <!-- tmp set specific non-vulnerable Spring security version, until Spring-Boot is up-to-date -->
        <spring-security.version>5.7.12</spring-security.version>
        <junit.version>5.7.1</junit.version>
        <junit-platform-runner.version>1.8.0-M1</junit-platform-runner.version>
        <mockito.version>3.8.0</mockito.version>
        <spring-security-test.version>5.7.8</spring-security-test.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.keycloak.bom</groupId>
                <artifactId>keycloak-adapter-bom</artifactId>
                <version>${keycloak.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!-- use log4j2 instead -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
                <!-- we exclude logback because otherwise we get a lot of debug logging from the Apache httpclient.
                alternatively if you want logging from that enable this and control the logging by adding a logback.xml file -->
                <exclusion>
                    <artifactId>logback-classic</artifactId>
                    <groupId>ch.qos.logback</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>


        <!-- Api commons error module -->
        <dependency>
            <groupId>eu.europeana.api.commons</groupId>
            <artifactId>commons-error</artifactId>
            <version>${api-commons-version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.mongodb</groupId>
                    <artifactId>mongo-java-driver</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Keycloak integration -->
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-admin-client</artifactId>
            <version>${keycloak.version}</version>
        </dependency>
        <dependency>
            <groupId>org.keycloak</groupId>
            <artifactId>keycloak-spring-security-adapter</artifactId>
            <version>${keycloak.version}</version>
        </dependency>

        <!-- Tmp - use non-vulnerable version of spring-security until Spring Framework is updated-->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-crypto</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring-security.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>${spring-security.version}</version>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <artifactId>android-json</artifactId>
                    <groupId>com.vaadin.external.google</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <version>${spring-security-test.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit-platform-runner.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Others-->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-validator</groupId>
            <artifactId>commons-validator</artifactId>
            <version>${commons-validator.version}</version>
        </dependency>
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>${json.version}</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${jodatime.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commonsLang3.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commonsIO.version}</version>
        </dependency>
    </dependencies>

    <build>
        <!-- set fixed name for easy deployment -->
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-dependency-plugin</artifactId>-->
<!--                <version>3.6.1</version>-->
<!--                <configuration>-->
<!--                    <usedDependencies>-->
<!--                        <dependency>org.springframework.boot:spring-boot-starter-web</dependency>-->
<!--                        <dependency>org.springframework.boot:spring-boot-starter-log4j2</dependency>-->
<!--                        <dependency>org.springframework.boot:spring-boot-starter-data-jpa</dependency>-->
<!--                        <dependency>org.springframework.boot:spring-boot-starter-mail</dependency>-->
<!--                        <dependency>org.springframework.boot:spring-boot-starter-security</dependency>-->
<!--                        <dependency>com.h2database:h2</dependency>-->
<!--                        <dependency>org.junit.platform:junit-platform-runner</dependency>-->
<!--                        <dependency>org.springframework.boot:spring-boot-starter-test</dependency>-->
<!--                    </usedDependencies>-->
<!--                </configuration>-->
<!--            </plugin>-->


            <plugin>
                <!-- This will be active when running the verify or install goal
                     To skip (e.g. during debugging) use 'mvn clean package')-->
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>${dependency-check-maven.version}</version>
                <configuration>
                    <knownExploitedUrl>http://artifactory.eanadev.org/artifactory/ext-release-local/gov/cisa/www/known_exploited_vulnerabilities.json</knownExploitedUrl>
                    <failBuildOnCVSS>8</failBuildOnCVSS>
                    <assemblyAnalyzerEnabled>false</assemblyAnalyzerEnabled>
                    <suppressionFiles>
                        <suppressionFile>owasp-suppress.xml</suppressionFile>
                    </suppressionFiles>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
