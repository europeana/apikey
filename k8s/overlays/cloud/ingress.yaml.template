apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apikey-validate-ingress
  annotations:
    cert-manager.io/issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/server-alias: ${K8S_SERVER_ALIASES}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    ${K8S_INGRESS_REDIRECT_ANNOTATION}
spec:
  ingressClassName: public-iks-k8s-nginx
  tls:
    - hosts:
        - ${K8S_HOSTNAME}
      secretName: ${K8S_SECRETNAME}
  rules:
    - host: ${K8S_HOSTNAME}
      http:
        paths:
          - path: /validate
            pathType: Prefix
            backend:
              service:
                name: dummy-apikey-service
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: apikey-ingress
  annotations:
    cert-manager.io/issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/server-alias: ${K8S_SERVER_ALIASES}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: public-iks-k8s-nginx
  tls:
    - hosts:
        - ${K8S_HOSTNAME}
      secretName: ${K8S_SECRETNAME}
  rules:
    - host: ${K8S_HOSTNAME}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: apikey-service
                port:
                  number: 80